// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }
model User {
  id         Int      @id @default(autoincrement())
  email      String   @db.VarChar(255) @unique
  username   String   @db.VarChar(255) @unique
  password   String   @db.VarChar(255)
  profile_pic String?     
  teams      Teams[]
  favorites  Favorites[]
}

model Teams {
  id            Int      @id @default(autoincrement())
  user_id       Int
  user          User     @relation(fields:  [user_id], references: [id])
  team_name     String
  pokemon_teams PokemonTeams[]
  favorites     Favorites[]
}

model PokemonTeams {
  id          Int      @id @default(autoincrement())
  teams_id    Int      
  teams       Teams    @relation(fields: [teams_id], references: [id])
  pokemon_id  Int
  pokemon     TeamPokemon  @relation(fields: [pokemon_id], references: [id])
  move1       String   
  move2       String?
  move3       String?
  move4       String?
  held_item   String?
  nature      String?
  ability     String?
}

model TeamPokemon {
  id            Int       @id @default(autoincrement())
  pokemon_teams PokemonTeams[]
  name          String
  type1         String
  type2         String?
  sprite        String
  shiny         String
  hp            Int
  attack        Int
  defense       Int
  special_atk   Int
  special_def   Int
  speed         Int
}

model Pokemon {
  id                Int       @id 
  name              String
  type1             String
  type2             String?
  moves             MoveOnPokemon[]
  abilities         AbilitiesOnPokemon[]
  sprite            String?
  shiny             String?
  base_exp          Int?
  growth_rate       String
  catch_rate        Int
  hp                Int
  atk               Int
  def               Int
  sp_atk            Int
  sp_def            Int
  speed             Int
}

model Favorites{
  id        Int      @id @default(autoincrement())
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id])
  teams_id  Int
  teams     Teams    @relation(fields: [teams_id], references: [id])
}

model HeldItems{
  id            Int     @id @default(autoincrement())
  item_name     String  
  effects       String
  game_indices  String
}

model Nature{
  id              Int      @id @default(autoincrement())
  name            String
  decreased_stat  String?
  increased_stat  String?
}
model MoveOnPokemon{
  id            Int          @id @default(autoincrement())
  name          String  
  pokemon       Pokemon      @relation(fields: [pokemon_id], references: [id])
  pokemon_id    Int
  move          Moves        @relation(fields: [move_id], references: [id])
  move_id       Int
  @@unique([pokemon_id, move_id])
}
model Moves{
  id                Int       @id
  name              String  
  pokemon           MoveOnPokemon[]
  accuracy          Int?
  damage_class      String
  gens              String
  machine           Machine[]
  power             Int?
  pp                Int?
  type              String?
  priority          Int?
  prevMoves         PrevMoves[]
}

model PrevMoves{
  id            Int        @id @default(autoincrement())
  move_id       Int
  moves         Moves      @relation(fields: [move_id], references: [id])
  accuracy      Int?
  power         Int?
  pp            Int?
  type          String?
  gen           String?
}
model Machine{
  id         Int       @id @default(autoincrement())
  move_id    Int
  moves      Moves     @relation(fields: [move_id], references: [id])
  item_name  String
  move_name  String
  gen        String
}

model AbilitiesOnPokemon{
  id            Int          @id @default(autoincrement())
  name          String
  ability_id    Int
  abilities     Abilities    @relation(fields: [ability_id], references: [id])
  pokemon_id    Int
  pokemon       Pokemon    @relation(fields: [pokemon_id], references: [id])
  is_hidden     Boolean
}
model Abilities{
  id            Int        @id 
  abilities     AbilitiesOnPokemon[]
  name          String
  effect        String
  gen           String
}